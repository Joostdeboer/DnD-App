# https://harrywang.medium.com/introducing-tailpages-tailwind-github-pages-89903c52d3ec
# need to set these otherwise tailwind does not know where to fetch the stylesheets from
baseurl: "/DnD-App"
url: "https://joostdeboer.github.io"

name: GitHub Actions
run-name: ${{ github.event.head_commit.message }}
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
permissions:
    contents: read
    pages: write
    id-token: write
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      -   run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      -   run: echo "This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      -   name: Check out repository code
          uses: actions/checkout@v3
      -   run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      -   run: echo " The workflow is now ready to test your code on the runner."
      -   run: echo "This job's status is ${{ job.status }}."
  Build-and-Test:
    concurrency: ci-${{ github.ref }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 18.x ]
    steps:
      -   uses: actions/checkout@v3
      -   name: Caching dependencies
          uses: actions/setup-node@v3
          with:
            node-version: ${{ matrix.node-version }}
            cache: 'npm'
            cache-dependency-path: |
              frontend/package-lock.json
              maroon-stingray/package-lock.json
      - name: Setup Pages
        uses: actions/configure-pages@v3
        with:
            # Automatically inject basePath in your Next.js configuration file and disable
            # server side image optimization (https://nextjs.org/docs/api-reference/next/image#unoptimized).
            #
            # You may remove this line if you want to manage the configuration yourself.
            static_site_generator: next
      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: |
            .next/cache
            ~/.npm
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-
      -   name: install dependencies frontend
          working-directory: ./frontend
          run: npm ci
      -   name: install dependencies sanity
          working-directory: ./maroon-stingray
          run: npm ci --legacy-peer-deps
      -   name: BUILD # produces static files using the 'output = export' option in the config
          working-directory: ./frontend
          run: npm run build
      -   name: TYPE-CHECK
          working-directory: ./frontend
          run: npm run type-check
      -   name: TEST
          working-directory: ./frontend
          run: npm run test
      -   name: Upload artifact
          uses: actions/upload-pages-artifact@v1
          with:
            path: ./frontend/out
  Deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: Build-and-Test
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2